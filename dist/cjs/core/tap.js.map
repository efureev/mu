{"version":3,"file":"tap.js","names":["tap","value","interceptor","isFunction","isBasicType"],"sources":["../../../src/core/tap.ts"],"sourcesContent":["/**\n * This method invokes `interceptor` and returns `value`. The interceptor\n * is invoked with one argument; (value). The purpose of this method is to\n * \"tap into\" a method chain sequence in order to modify intermediate results.\n *\n * @static\n * @param {*} value The value to provide to `interceptor`.\n * @param {Function} interceptor The function to invoke.\n * @returns {*} Returns `value`.\n * @example\n *\n * tap('test') // 'test'\n * tap([1, 2, 3], (value) => value.pop()) // [1,2]\n * tap({b: 2, a: 'test'}, (value) => delete value.a) // {b: 2}\n * tap(()=>100)) // 100\n * tap(()=>100), (value) => value / 2) // 50\n *\n */\nimport { isBasicType, isFunction } from '../is'\n\nexport default function tap(value: any, interceptor?: Function) {\n  if (isFunction(value)) {\n    value = value()\n  }\n\n  if (interceptor && isFunction(interceptor)) {\n    if (isBasicType(value)) {\n      return interceptor(value)\n    }\n\n    interceptor(value)\n  }\n\n  return value\n}\n"],"mappings":";;;;;;;AAkBA;;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGe,SAASA,GAAT,CAAaC,KAAb,EAAyBC,WAAzB,EAAiD;EAC9D,IAAI,IAAAC,cAAA,EAAWF,KAAX,CAAJ,EAAuB;IACrBA,KAAK,GAAGA,KAAK,EAAb;EACD;;EAED,IAAIC,WAAW,IAAI,IAAAC,cAAA,EAAWD,WAAX,CAAnB,EAA4C;IAC1C,IAAI,IAAAE,eAAA,EAAYH,KAAZ,CAAJ,EAAwB;MACtB,OAAOC,WAAW,CAACD,KAAD,CAAlB;IACD;;IAEDC,WAAW,CAACD,KAAD,CAAX;EACD;;EAED,OAAOA,KAAP;AACD"}