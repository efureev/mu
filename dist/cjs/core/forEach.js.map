{"version":3,"file":"forEach.js","names":["forEach","collection","iterateFn","Array","isArray","arrayEach","baseEach","object","createBaseFor","keys","func","createBaseEach","fromRight","keysFunc","index","iterable","Object","properties","length","key","eachFunc","isArrayLike"],"sources":["../../../src/core/forEach.ts"],"sourcesContent":["import arrayEach from '../array/arrayEach'\nimport keys from './keys'\n\nimport { CollectionType } from '../internal/types'\nimport isArrayLike from '../is/isArrayLike'\n\nexport default function forEach(collection: CollectionType, iterateFn: ObjectEachCallback) {\n  if (Array.isArray(collection)) {\n    return arrayEach(<any[]>collection, iterateFn)\n  }\n\n  const baseEach = (object: ObjType, iterateFn: ObjectEachCallback): ObjType => {\n    return object && createBaseFor()(object, iterateFn, keys)\n  }\n\n  const func = createBaseEach(baseEach)\n\n  return func(<Record<PropertyKey, any>>collection, iterateFn)\n}\n\ntype ObjType = Record<string | number, any>\ntype ObjectEachCallback = (value: any, index: PropertyKey, array: ObjType) => boolean | void\n\ntype KeysFuncType = (o: ObjType) => string[]\ntype EachFnType = (o: ObjType, eachFn: ObjectEachCallback, keysFn: KeysFuncType) => ObjType\n\nfunction createBaseFor(fromRight: boolean = false): EachFnType {\n  return function (object: ObjType, iterateFn: ObjectEachCallback, keysFunc: KeysFuncType): ObjType {\n    let index = -1,\n      iterable: ObjType = new Object(object),\n      properties = keysFunc(object),\n      length: number = properties.length,\n      key: PropertyKey\n\n    while (length--) {\n      key = properties[fromRight ? length : ++index]\n      if (iterateFn(iterable[key], key, iterable) === false) {\n        break\n      }\n    }\n\n    return object\n  }\n}\n\ntype EachFuncType = (collection: ObjType, iterateFn: ObjectEachCallback) => ObjType\n\nfunction createBaseEach(eachFunc: EachFuncType, fromRight: boolean = false) {\n  return function (collection: Record<PropertyKey, any>, iterateFn: ObjectEachCallback): ObjType {\n    if (collection == null) {\n      return collection\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iterateFn)\n    }\n\n    const length = collection.length\n    const iterable: ObjType = new Object(collection)\n\n    let index = fromRight ? length : -1\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iterateFn(iterable[index], index, iterable) === false) {\n        break\n      }\n    }\n    return collection\n  }\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AAGA;;;;AAEe,SAASA,OAAT,CAAiBC,UAAjB,EAA6CC,SAA7C,EAA4E;EACzF,IAAIC,KAAK,CAACC,OAAN,CAAcH,UAAd,CAAJ,EAA+B;IAC7B,OAAO,IAAAI,kBAAA,EAAiBJ,UAAjB,EAA6BC,SAA7B,CAAP;EACD;;EAED,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAAkBL,SAAlB,EAA6D;IAC5E,OAAOK,MAAM,IAAIC,aAAa,GAAGD,MAAH,EAAWL,SAAX,EAAsBO,aAAtB,CAA9B;EACD,CAFD;;EAIA,IAAMC,IAAI,GAAGC,cAAc,CAACL,QAAD,CAA3B;EAEA,OAAOI,IAAI,CAA2BT,UAA3B,EAAuCC,SAAvC,CAAX;AACD;;AAQD,SAASM,aAAT,GAA+D;EAAA,IAAxCI,SAAwC,uEAAnB,KAAmB;EAC7D,OAAO,UAAUL,MAAV,EAA2BL,SAA3B,EAA0DW,QAA1D,EAA2F;IAChG,IAAIC,KAAK,GAAG,CAAC,CAAb;IAAA,IACEC,QAAiB,GAAG,IAAIC,MAAJ,CAAWT,MAAX,CADtB;IAAA,IAEEU,UAAU,GAAGJ,QAAQ,CAACN,MAAD,CAFvB;IAAA,IAGEW,MAAc,GAAGD,UAAU,CAACC,MAH9B;IAAA,IAIEC,GAJF;;IAMA,OAAOD,MAAM,EAAb,EAAiB;MACfC,GAAG,GAAGF,UAAU,CAACL,SAAS,GAAGM,MAAH,GAAY,EAAEJ,KAAxB,CAAhB;;MACA,IAAIZ,SAAS,CAACa,QAAQ,CAACI,GAAD,CAAT,EAAgBA,GAAhB,EAAqBJ,QAArB,CAAT,KAA4C,KAAhD,EAAuD;QACrD;MACD;IACF;;IAED,OAAOR,MAAP;EACD,CAfD;AAgBD;;AAID,SAASI,cAAT,CAAwBS,QAAxB,EAA4E;EAAA,IAA5BR,SAA4B,uEAAP,KAAO;EAC1E,OAAO,UAAUX,UAAV,EAAgDC,SAAhD,EAAwF;IAC7F,IAAID,UAAU,IAAI,IAAlB,EAAwB;MACtB,OAAOA,UAAP;IACD;;IAED,IAAI,CAAC,IAAAoB,oBAAA,EAAYpB,UAAZ,CAAL,EAA8B;MAC5B,OAAOmB,QAAQ,CAACnB,UAAD,EAAaC,SAAb,CAAf;IACD;;IAED,IAAMgB,MAAM,GAAGjB,UAAU,CAACiB,MAA1B;IACA,IAAMH,QAAiB,GAAG,IAAIC,MAAJ,CAAWf,UAAX,CAA1B;IAEA,IAAIa,KAAK,GAAGF,SAAS,GAAGM,MAAH,GAAY,CAAC,CAAlC;;IAEA,OAAON,SAAS,GAAGE,KAAK,EAAR,GAAa,EAAEA,KAAF,GAAUI,MAAvC,EAA+C;MAC7C,IAAIhB,SAAS,CAACa,QAAQ,CAACD,KAAD,CAAT,EAAkBA,KAAlB,EAAyBC,QAAzB,CAAT,KAAgD,KAApD,EAA2D;QACzD;MACD;IACF;;IACD,OAAOd,UAAP;EACD,CApBD;AAqBD"}