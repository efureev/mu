{"version":3,"file":"clone.js","names":["enumerables","clone","item","cloneDom","undefined","nodeType","cloneNode","type","Object","prototype","toString","call","isDate","Date","getTime","i","j","k","Array","isArray","length","newClone","constructor","key","hasOwnProperty"],"sources":["../../../src/core/clone.ts"],"sourcesContent":["import isDate from '../is/isDate'\n\nconst enumerables = ['valueOf', 'toLocaleString', 'toString', 'constructor']\n\n/**\n * Clone simple variables including array, {}-like objects, DOM nodes and Date without\n * keeping the old reference. A reference for the object itself is returned if it's not\n * a direct descendant of Object.\n *\n * @param {Object} item The variable to clone\n * @param {Boolean} [cloneDom=true] `true` to clone DOM nodes.\n * @return {Object} clone\n */\nexport default function clone<T = NonNullable<any>>(item: T, cloneDom: boolean = true): T {\n  if (item === null || item === undefined) {\n    return item\n  }\n\n  // @ts-ignore\n  if (cloneDom && item.nodeType && item.cloneNode) {\n    // @ts-ignore\n    return item.cloneNode(true)\n  }\n\n  const type = Object.prototype.toString.call(item)\n\n  // Date\n  if (isDate(item)) {\n    // @ts-ignore\n    return new Date(item.getTime())\n  }\n\n  let i: number, j: number, k\n\n  // Array\n  if (Array.isArray(item)) {\n    i = item.length\n    let newClone: Record<number, any> = []\n\n    while (i--) {\n      newClone[i] = clone<any>(item[i], cloneDom)\n    }\n\n    return <T>newClone\n  }\n\n  // Object\n  if (type === '[object Object]' && (<Object>item).constructor === Object) {\n    let key: PropertyKey\n    let newClone: Record<PropertyKey, any> = {}\n\n    for (key in item) {\n      newClone[key] = clone<any>((<Record<PropertyKey, any>>item)[key], cloneDom)\n    }\n\n    if (enumerables) {\n      for (j = enumerables.length; j--; ) {\n        let k: string = enumerables[j]\n        if (Object.prototype.hasOwnProperty.call(item, k)) {\n          newClone[k] = (<Record<string, any>>item)[k]\n        }\n      }\n    }\n\n    return newClone\n  }\n\n  return item\n}\n"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,WAAW,GAAG,CAAC,SAAD,EAAY,gBAAZ,EAA8B,UAA9B,EAA0C,aAA1C,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASC,KAAT,CAAqCC,IAArC,EAA2E;EAAA,IAA7BC,QAA6B,uEAAT,IAAS;;EACxF,IAAID,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAKE,SAA9B,EAAyC;IACvC,OAAOF,IAAP;EACD,CAHuF,CAKxF;;;EACA,IAAIC,QAAQ,IAAID,IAAI,CAACG,QAAjB,IAA6BH,IAAI,CAACI,SAAtC,EAAiD;IAC/C;IACA,OAAOJ,IAAI,CAACI,SAAL,CAAe,IAAf,CAAP;EACD;;EAED,IAAMC,IAAI,GAAGC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BT,IAA/B,CAAb,CAXwF,CAaxF;;EACA,IAAI,IAAAU,eAAA,EAAOV,IAAP,CAAJ,EAAkB;IAChB;IACA,OAAO,IAAIW,IAAJ,CAASX,IAAI,CAACY,OAAL,EAAT,CAAP;EACD;;EAED,IAAIC,CAAJ,EAAeC,CAAf,EAA0BC,CAA1B,CAnBwF,CAqBxF;;EACA,IAAIC,KAAK,CAACC,OAAN,CAAcjB,IAAd,CAAJ,EAAyB;IACvBa,CAAC,GAAGb,IAAI,CAACkB,MAAT;IACA,IAAIC,QAA6B,GAAG,EAApC;;IAEA,OAAON,CAAC,EAAR,EAAY;MACVM,QAAQ,CAACN,CAAD,CAAR,GAAcd,KAAK,CAAMC,IAAI,CAACa,CAAD,CAAV,EAAeZ,QAAf,CAAnB;IACD;;IAED,OAAUkB,QAAV;EACD,CA/BuF,CAiCxF;;;EACA,IAAId,IAAI,KAAK,iBAAT,IAAuCL,IAAT,CAAeoB,WAAf,KAA+Bd,MAAjE,EAAyE;IACvE,IAAIe,GAAJ;IACA,IAAIF,SAAkC,GAAG,EAAzC;;IAEA,KAAKE,GAAL,IAAYrB,IAAZ,EAAkB;MAChBmB,SAAQ,CAACE,GAAD,CAAR,GAAgBtB,KAAK,CAAiCC,IAA3B,CAAiCqB,GAAjC,CAAN,EAA6CpB,QAA7C,CAArB;IACD;;IAED,IAAIH,WAAJ,EAAiB;MACf,KAAKgB,CAAC,GAAGhB,WAAW,CAACoB,MAArB,EAA6BJ,CAAC,EAA9B,GAAoC;QAClC,IAAIC,EAAS,GAAGjB,WAAW,CAACgB,CAAD,CAA3B;;QACA,IAAIR,MAAM,CAACC,SAAP,CAAiBe,cAAjB,CAAgCb,IAAhC,CAAqCT,IAArC,EAA2Ce,EAA3C,CAAJ,EAAmD;UACjDI,SAAQ,CAACJ,EAAD,CAAR,GAAoCf,IAAtB,CAA4Be,EAA5B,CAAd;QACD;MACF;IACF;;IAED,OAAOI,SAAP;EACD;;EAED,OAAOnB,IAAP;AACD"}