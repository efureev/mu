{"version":3,"file":"intersect.js","names":["intersect","array","array2","set","Set","filter","item","has","intersectAll","arrays","reduce","previous","next"],"sources":["../../../src/array/intersect.ts"],"sourcesContent":["/**\n * Return common items for two arrays\n *\n * @param {Array} array\n * @param {Array} array2\n * @returns {any[]}\n */\nexport default function intersect(array: any[], array2: any[]): any[] {\n  const set = new Set(array)\n  return [...new Set(array2.filter(item => set.has(item)))]\n}\n\n/**\n * Return common items for all arrays\n *\n * @param array\n * @param arrays\n * @returns {*|any[]}\n */\nexport function intersectAll(array: any[], ...arrays: any[]) {\n  return arrays.reduce((previous, next) => {\n    return intersect(previous, next)\n  }, array)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,SAAT,CAAmBC,KAAnB,EAAiCC,MAAjC,EAAuD;EACpE,IAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQH,KAAR,CAAZ;EACA,0BAAW,IAAIG,GAAJ,CAAQF,MAAM,CAACG,MAAP,CAAc,UAAAC,IAAI;IAAA,OAAIH,GAAG,CAACI,GAAJ,CAAQD,IAAR,CAAJ;EAAA,CAAlB,CAAR,CAAX;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASE,YAAT,CAAsBP,KAAtB,EAAsD;EAAA,kCAAfQ,MAAe;IAAfA,MAAe;EAAA;;EAC3D,OAAOA,MAAM,CAACC,MAAP,CAAc,UAACC,QAAD,EAAWC,IAAX,EAAoB;IACvC,OAAOZ,SAAS,CAACW,QAAD,EAAWC,IAAX,CAAhB;EACD,CAFM,EAEJX,KAFI,CAAP;AAGD"}