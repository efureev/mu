{"version":3,"file":"arrayEach.js","names":["arrayEach","array","callback","length","index"],"sources":["../../../src/array/arrayEach.ts"],"sourcesContent":["/**\n * A specialized version of `forEach` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} callback The function invoked per iteration.\n * @returns {Array} Returns `bool`.\n */\n\ntype ArrayEachCallback<T> = (value: T, index: number, array: T[]) => boolean | void\n\nexport default function arrayEach<T>(array: T[], callback: ArrayEachCallback<T>): T[] {\n  const length = array.length\n  let index = -1\n\n  while (++index < length) {\n    if (callback(array[index], index, array) === false) {\n      break\n    }\n  }\n\n  return array\n}\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIe,SAASA,SAAT,CAAsBC,KAAtB,EAAkCC,QAAlC,EAAuE;EACpF,IAAMC,MAAM,GAAGF,KAAK,CAACE,MAArB;EACA,IAAIC,KAAK,GAAG,CAAC,CAAb;;EAEA,OAAO,EAAEA,KAAF,GAAUD,MAAjB,EAAyB;IACvB,IAAID,QAAQ,CAACD,KAAK,CAACG,KAAD,CAAN,EAAeA,KAAf,EAAsBH,KAAtB,CAAR,KAAyC,KAA7C,EAAoD;MAClD;IACD;EACF;;EAED,OAAOA,KAAP;AACD"}