{"version":3,"file":"camelCase.js","names":["preserveCamelCase","value","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","length","character","test","toUpperCase","slice","toLowerCase","camelCase","input","options","pascalCase","postProcess","x","charAt","str","trim","map","filter","join","hasUpperCase","replace","_","p1","m"],"sources":["../../../src/string/camelCase.ts"],"sourcesContent":["const preserveCamelCase = (value: string): string => {\n  let isLastCharLower = false\n  let isLastCharUpper = false\n  let isLastLastCharUpper = false\n\n  for (let i = 0; i < value.length; i++) {\n    const character = value[i]\n\n    if (isLastCharLower && /[A-Za-z]/.test(character) && character.toUpperCase() === character) {\n      value = value.slice(0, i) + '-' + value.slice(i)\n      isLastCharLower = false\n      isLastLastCharUpper = isLastCharUpper\n      isLastCharUpper = true\n      i++\n    } else if (\n      isLastCharUpper &&\n      isLastLastCharUpper &&\n      /[A-Za-z]/.test(character) &&\n      character.toLowerCase() === character\n    ) {\n      value = value.slice(0, i - 1) + '-' + value.slice(i - 1)\n      isLastLastCharUpper = isLastCharUpper\n      isLastCharUpper = false\n      isLastCharLower = true\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character\n      isLastLastCharUpper = isLastCharUpper\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character\n    }\n  }\n\n  return value\n}\n\ninterface CamelCaseType {\n  pascalCase: boolean\n}\n\nconst camelCase = (input: string | string[], options?: CamelCaseType): string => {\n  options = {\n    pascalCase: false,\n    ...(options ? options : {}),\n  }\n\n  const postProcess = (x: string): string =>\n    options && options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x\n\n  let str =\n    typeof input === 'string'\n      ? input.trim()\n      : input\n          .map(x => x.trim())\n          .filter(x => x.length)\n          .join('-')\n\n  if (str.length === 0) {\n    return ''\n  }\n\n  if (str.length === 1) {\n    return options.pascalCase ? str.toUpperCase() : str.toLowerCase()\n  }\n\n  const hasUpperCase = str !== str.toLowerCase()\n\n  if (hasUpperCase) {\n    str = preserveCamelCase(str)\n  }\n\n  str = str\n    .replace(/^[ ._\\-]+/, '')\n    .toLowerCase()\n    .replace(/[ ._\\-]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n    .replace(/\\d+(\\w|$)/g, m => m.toUpperCase())\n\n  return postProcess(str)\n}\n\nexport const pascalCase = (input: string | string[]): string => {\n  return camelCase(input, { pascalCase: true })\n}\n\nexport default camelCase\n"],"mappings":"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"}