{"version":3,"file":"isIndex.js","names":["isIndex","value","length","type","Number","MAX_SAFE_INTEGER","reIsUint","test"],"sources":["../../../src/internal/isIndex.ts"],"sourcesContent":["/** Used as references for various `Number` constants. */\nimport { reIsUint } from '../core/vars'\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nexport default function isIndex(value: any, length?: Number): boolean {\n  const type = typeof value\n  length = length == null ? Number.MAX_SAFE_INTEGER : length\n\n  return (\n    !!length &&\n    (type === 'number' || (type !== 'symbol' && reIsUint.test(value))) &&\n    value > -1 &&\n    value % 1 === 0 &&\n    value < length\n  )\n}\n"],"mappings":";;;;;;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,OAAT,CAAiBC,KAAjB,EAA6BC,MAA7B,EAAuD;EACpE,IAAMC,IAAI,WAAUF,KAAV,CAAV;;EACAC,MAAM,GAAGA,MAAM,IAAI,IAAV,GAAiBE,MAAM,CAACC,gBAAxB,GAA2CH,MAApD;EAEA,OACE,CAAC,CAACA,MAAF,KACCC,IAAI,KAAK,QAAT,IAAsBA,IAAI,KAAK,QAAT,IAAqBG,cAAA,CAASC,IAAT,CAAcN,KAAd,CAD5C,KAEAA,KAAK,GAAG,CAAC,CAFT,IAGAA,KAAK,GAAG,CAAR,KAAc,CAHd,IAIAA,KAAK,GAAGC,MALV;AAOD"}