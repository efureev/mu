{"version":3,"file":"Stack.js","names":["Stack","item","data","push","isEmpty","pop","undefined","size","length","reverse","callback","toArray","isFunction","map","toString"],"sources":["../../../src/structures/Stack.ts"],"sourcesContent":["import isFunction from '../is/isFunction'\n\nexport class Stack<T> {\n  protected data: T[] = []\n\n  public push(item: T): void {\n    this.data.push(item)\n  }\n\n  public pull(): T | undefined {\n    return !this.isEmpty() ? this.data.pop() : undefined\n  }\n\n  public peek(): T | undefined {\n    return !this.isEmpty() ? this.data[this.size() - 1] : undefined\n  }\n\n  public size(): number {\n    return this.data.length\n  }\n\n  public isEmpty(): boolean {\n    return this.data.length === 0\n  }\n\n  public toArray(): T[] {\n    return [...this.data].reverse()\n  }\n\n  public toString(callback?: (i: T) => any): string {\n    const data = this.toArray()\n\n    if (callback && isFunction(callback)) {\n      return data.map(item => callback(item)).toString()\n    }\n\n    return data.toString()\n  }\n}\n\nexport default new Stack()\n"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,K;;;;kCACW,E;;;;;WAEtB,cAAYC,IAAZ,EAA2B;MACzB,KAAKC,IAAL,CAAUC,IAAV,CAAeF,IAAf;IACD;;;WAED,gBAA6B;MAC3B,OAAO,CAAC,KAAKG,OAAL,EAAD,GAAkB,KAAKF,IAAL,CAAUG,GAAV,EAAlB,GAAoCC,SAA3C;IACD;;;WAED,gBAA6B;MAC3B,OAAO,CAAC,KAAKF,OAAL,EAAD,GAAkB,KAAKF,IAAL,CAAU,KAAKK,IAAL,KAAc,CAAxB,CAAlB,GAA+CD,SAAtD;IACD;;;WAED,gBAAsB;MACpB,OAAO,KAAKJ,IAAL,CAAUM,MAAjB;IACD;;;WAED,mBAA0B;MACxB,OAAO,KAAKN,IAAL,CAAUM,MAAV,KAAqB,CAA5B;IACD;;;WAED,mBAAsB;MACpB,OAAO,mBAAI,KAAKN,IAAT,EAAeO,OAAf,EAAP;IACD;;;WAED,kBAAgBC,QAAhB,EAAkD;MAChD,IAAMR,IAAI,GAAG,KAAKS,OAAL,EAAb;;MAEA,IAAID,QAAQ,IAAI,IAAAE,mBAAA,EAAWF,QAAX,CAAhB,EAAsC;QACpC,OAAOR,IAAI,CAACW,GAAL,CAAS,UAAAZ,IAAI;UAAA,OAAIS,QAAQ,CAACT,IAAD,CAAZ;QAAA,CAAb,EAAiCa,QAAjC,EAAP;MACD;;MAED,OAAOZ,IAAI,CAACY,QAAL,EAAP;IACD;;;;;;;;eAGY,IAAId,KAAJ,E"}