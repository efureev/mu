{"version":3,"file":"toInteger.js","names":["toInteger","value","result","toFinite","remainder"],"sources":["../../../src/to/toInteger.ts"],"sourcesContent":["import toFinite from './toFinite'\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @example\n *\n * toInteger(3.2);\n * // => 3\n *\n * toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * toInteger('3.2');\n * // => 3\n */\nexport default function toInteger(value: any): number {\n  const result = toFinite(value)\n  let remainder = result % 1\n\n  return result === result ? (remainder ? result - remainder : result) : 0\n}\n"],"mappings":";;;;;;;AAAA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,SAAT,CAAmBC,KAAnB,EAAuC;EACpD,IAAMC,MAAM,GAAG,IAAAC,iBAAA,EAASF,KAAT,CAAf;EACA,IAAIG,SAAS,GAAGF,MAAM,GAAG,CAAzB;EAEA,OAAOA,MAAM,KAAKA,MAAX,GAAqBE,SAAS,GAAGF,MAAM,GAAGE,SAAZ,GAAwBF,MAAtD,GAAgE,CAAvE;AACD"}