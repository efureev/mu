{"version":3,"file":"sortByProperty.js","names":["sortByProperty","property","asc","ignoreCase","a","b","aProp","isString","toUpperCase","bProp"],"sources":["../../../src/sort/sortByProperty.ts"],"sourcesContent":["/**\n *\n * @param {string} property\n * @param {boolean} asc\n * @param {boolean} ignoreCase\n * @return {(function(*, *): (number))|*}\n */\nimport isString from '../is/isString'\n\nexport default function sortByProperty(property: string, asc: boolean = true, ignoreCase: boolean = true) {\n  return function (a: Record<PropertyKey, any>, b: Record<PropertyKey, any>) {\n    let aProp = a[property]\n    if (ignoreCase && isString(aProp)) {\n      aProp = aProp.toUpperCase()\n    }\n\n    let bProp = b[property]\n    if (ignoreCase && isString(bProp)) {\n      bProp = bProp.toUpperCase()\n    }\n\n    if (aProp > bProp) {\n      return asc ? 1 : -1\n    }\n\n    if (aProp < bProp) {\n      return asc ? -1 : 1\n    }\n\n    return 0\n  }\n}\n"],"mappings":";;;;;;;AAOA;;;;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AAGe,SAASA,cAAT,CAAwBC,QAAxB,EAA2F;EAAA,IAAjDC,GAAiD,uEAAlC,IAAkC;EAAA,IAA5BC,UAA4B,uEAAN,IAAM;EACxG,OAAO,UAAUC,CAAV,EAAuCC,CAAvC,EAAoE;IACzE,IAAIC,KAAK,GAAGF,CAAC,CAACH,QAAD,CAAb;;IACA,IAAIE,UAAU,IAAI,IAAAI,iBAAA,EAASD,KAAT,CAAlB,EAAmC;MACjCA,KAAK,GAAGA,KAAK,CAACE,WAAN,EAAR;IACD;;IAED,IAAIC,KAAK,GAAGJ,CAAC,CAACJ,QAAD,CAAb;;IACA,IAAIE,UAAU,IAAI,IAAAI,iBAAA,EAASE,KAAT,CAAlB,EAAmC;MACjCA,KAAK,GAAGA,KAAK,CAACD,WAAN,EAAR;IACD;;IAED,IAAIF,KAAK,GAAGG,KAAZ,EAAmB;MACjB,OAAOP,GAAG,GAAG,CAAH,GAAO,CAAC,CAAlB;IACD;;IAED,IAAII,KAAK,GAAGG,KAAZ,EAAmB;MACjB,OAAOP,GAAG,GAAG,CAAC,CAAJ,GAAQ,CAAlB;IACD;;IAED,OAAO,CAAP;EACD,CApBD;AAqBD"}