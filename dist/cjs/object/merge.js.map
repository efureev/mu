{"version":3,"file":"merge.js","names":["merge","original","ln","i","object","key","value","sourceKey","isObject","constructor","Object","clone"],"sources":["../../../src/object/merge.ts"],"sourcesContent":["import clone from '../core/clone'\nimport isObject from '../is/isObject'\n\n/**\n * Merge objects recursively\n *\n *     var js = {\n *         companyName: 'JS',\n *         products: ['JS', 'GWT', 'Designer'],\n *         isSuperCool: true,\n *         office: {\n *             size: 2000,\n *             location: 'Palo Alto',\n *             isFun: true\n *         }\n *     };\n *\n *     var newStuff = {\n *         companyName: 'Jacksonville',\n *         products: ['JS', 'GWT', 'Designer', 'Touch', 'Animator'],\n *         office: {\n *             size: 40000,\n *             location: 'Redwood City'\n *         }\n *     };\n *\n *     const result = merge(js, newStuff);\n *\n *     {\n *         companyName: 'Jacksonville',\n *         products: ['JS', 'GWT', 'Designer', 'Touch', 'Animator'],\n *         isSuperCool: true,\n *         office: {\n *             size: 40000,\n *             location: 'Redwood City',\n *             isFun: true\n *         }\n *     }\n */\n\nexport default function merge(\n  original: Record<PropertyKey, any>,\n  ...values: Record<PropertyKey, any>[]\n): Record<PropertyKey, any> {\n  const ln = values.length\n  let i = 0,\n    object,\n    key,\n    value,\n    sourceKey\n\n  for (; i < ln; i++) {\n    object = values[i]\n    if (!isObject(object)) {\n      continue\n    }\n    for (key in object) {\n      value = object[key]\n      if (value && value.constructor === Object) {\n        sourceKey = original[key]\n        if (sourceKey && sourceKey.constructor === Object) {\n          merge(sourceKey, value)\n        } else {\n          original[key] = clone(value)\n        }\n      } else {\n        original[key] = value\n      }\n    }\n  }\n\n  return original\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAASA,KAAT,CACbC,QADa,EAGa;EAC1B,IAAMC,EAAE,mDAAR;EACA,IAAIC,CAAC,GAAG,CAAR;EAAA,IACEC,MADF;EAAA,IAEEC,GAFF;EAAA,IAGEC,KAHF;EAAA,IAIEC,SAJF;;EAMA,OAAOJ,CAAC,GAAGD,EAAX,EAAeC,CAAC,EAAhB,EAAoB;IAClBC,MAAM,GAAUD,CAAV,gCAAUA,CAAV,6BAAUA,CAAV,KAAN;;IACA,IAAI,CAAC,IAAAK,iBAAA,EAASJ,MAAT,CAAL,EAAuB;MACrB;IACD;;IACD,KAAKC,GAAL,IAAYD,MAAZ,EAAoB;MAClBE,KAAK,GAAGF,MAAM,CAACC,GAAD,CAAd;;MACA,IAAIC,KAAK,IAAIA,KAAK,CAACG,WAAN,KAAsBC,MAAnC,EAA2C;QACzCH,SAAS,GAAGN,QAAQ,CAACI,GAAD,CAApB;;QACA,IAAIE,SAAS,IAAIA,SAAS,CAACE,WAAV,KAA0BC,MAA3C,EAAmD;UACjDV,KAAK,CAACO,SAAD,EAAYD,KAAZ,CAAL;QACD,CAFD,MAEO;UACLL,QAAQ,CAACI,GAAD,CAAR,GAAgB,IAAAM,cAAA,EAAML,KAAN,CAAhB;QACD;MACF,CAPD,MAOO;QACLL,QAAQ,CAACI,GAAD,CAAR,GAAgBC,KAAhB;MACD;IACF;EACF;;EAED,OAAOL,QAAP;AACD"}