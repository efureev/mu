{"version":3,"file":"fromQueryString.js","names":["queryRe","plusRe","keyRe","nameRe","fromQueryString","queryString","recursive","options","decodeName","isNil","parts","replace","split","object","Object","create","temporary","components","name","value","i","ln","part","j","subLn","matchedKeys","matchedName","keys","key","nextKey","length","decodeURIComponent","undefined","prototype","hasOwnProperty","call","Array","isArray","push","match","Error","substring","unshift","isNumeric"],"sources":["../../../src/object/fromQueryString.ts"],"sourcesContent":["import isNil from '../is/isNil'\nimport isNumeric from '../is/isNumeric'\nimport { TextNumber } from '../internal/types'\n\nconst queryRe = /^\\?/\nconst plusRe = /\\+/g\nconst keyRe = /(\\[):?([^\\]]*)\\]/g\nconst nameRe = /^([^[]+)/ // eslint-disable-line no-useless-escape\n\ntype FromQueryStringOptions = {\n  decodeName: boolean\n}\n\n/**\n * Converts a query string back into an object.\n *\n * Non-recursive:\n *\n *     fromQueryString(\"foo=1&bar=2\"); // returns {foo: '1', bar: '2'}\n *     fromQueryString(\"foo=&bar=2\"); // returns {foo: '', bar: '2'}\n *     fromQueryString(\"some%20price=%24300\"); // returns {'some price': '$300'}\n *     fromQueryString(\"colors=red&colors=green&colors=blue\"); // returns {colors: ['red', 'green', 'blue']}\n *\n * Recursive:\n *\n *     fromQueryString(\n *         \"username=Jacky&\"+\n *         \"dateOfBirth[day]=1&dateOfBirth[month]=2&dateOfBirth[year]=1911&\"+\n *         \"hobbies[0]=coding&hobbies[1]=eating&hobbies[2]=sleeping&\"+\n *         \"hobbies[3][0]=nested&hobbies[3][1]=stuff\", true);\n *\n *     // returns\n *     {\n *         username: 'Jacky',\n *         dateOfBirth: {\n *             day: '1',\n *             month: '2',\n *             year: '1911'\n *         },\n *         hobbies: ['coding', 'eating', 'sleeping', ['nested', 'stuff']]\n *     }\n *\n * @param {String|null} queryString The query string to decode\n * @param {Boolean} [recursive=false] Whether or not to recursively decode the string. This format is supported by\n * @param {Object} options = {\n *   - decodeName {Boolean} Decode KeyNames in the queryString\n * }\n * PHP / Ruby on Rails servers and similar.\n * @return {Object}\n * @todo write tests\n */\nexport default function fromQueryString(\n  queryString: string,\n  recursive: boolean = false,\n  options: FromQueryStringOptions = { decodeName: true }\n): Record<string, any> {\n  if (isNil(queryString)) {\n    return {}\n  }\n\n  let parts = queryString.replace(queryRe, '').split('&'),\n    object = Object.create(null),\n    temporary,\n    components: string[],\n    name: string,\n    value,\n    i,\n    ln,\n    part: string,\n    j,\n    subLn,\n    matchedKeys: RegExpMatchArray | null,\n    matchedName: RegExpMatchArray | null,\n    keys: string[],\n    key: string,\n    nextKey: TextNumber\n\n  for (i = 0, ln = parts.length; i < ln; i++) {\n    part = parts[i]\n\n    if (part.length > 0) {\n      components = part.split('=')\n      name = components[0]\n      name = name.replace(plusRe, '%20')\n      name = options.decodeName ? decodeURIComponent(name) : name\n\n      value = components[1]\n\n      if (value !== undefined) {\n        value = value.replace(plusRe, '%20')\n        value = decodeURIComponent(value)\n      } else {\n        value = ''\n      }\n\n      if (!recursive) {\n        if (Object.prototype.hasOwnProperty.call(object, name)) {\n          if (!Array.isArray(object[name])) {\n            object[name] = [object[name]]\n          }\n\n          object[name].push(value)\n        } else {\n          object[name] = value\n        }\n      } else {\n        matchedKeys = name.match(keyRe)\n        matchedName = name.match(nameRe)\n\n        //<debug>\n        if (!matchedName) {\n          throw new Error('[fromQueryString] Malformed query string given, failed parsing name from \"' + part + '\"')\n        }\n        //</debug>\n\n        name = matchedName[0]\n        keys = []\n\n        if (matchedKeys === null) {\n          object[name] = value\n          continue\n        }\n\n        for (j = 0, subLn = matchedKeys.length; j < subLn; j++) {\n          key = matchedKeys[j]\n          key = key.length === 2 ? '' : key.substring(1, key.length - 1)\n          keys.push(key)\n        }\n\n        keys.unshift(name)\n\n        temporary = object\n\n        for (j = 0, subLn = keys.length; j < subLn; j++) {\n          key = keys[j]\n\n          if (j === subLn - 1) {\n            if (Array.isArray(temporary) && key === '') {\n              temporary.push(value)\n            } else {\n              temporary[key] = value\n            }\n          } else {\n            if (temporary[key] === undefined || typeof temporary[key] === 'string') {\n              nextKey = keys[j + 1]\n\n              temporary[key] = isNumeric(nextKey) || nextKey === '' ? [] : {}\n            }\n\n            temporary = temporary[key]\n          }\n        }\n      }\n    }\n  }\n\n  return object\n}\n"],"mappings":"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"}