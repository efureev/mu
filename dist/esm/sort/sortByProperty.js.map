{"version":3,"file":"sortByProperty.js","names":["isString","sortByProperty","property","asc","ignoreCase","a","b","aProp","toUpperCase","bProp"],"sources":["../../../src/sort/sortByProperty.ts"],"sourcesContent":["/**\n *\n * @param {string} property\n * @param {boolean} asc\n * @param {boolean} ignoreCase\n * @return {(function(*, *): (number))|*}\n */\nimport isString from '../is/isString'\n\nexport default function sortByProperty(property: string, asc: boolean = true, ignoreCase: boolean = true) {\n  return function (a: Record<PropertyKey, any>, b: Record<PropertyKey, any>) {\n    let aProp = a[property]\n    if (ignoreCase && isString(aProp)) {\n      aProp = aProp.toUpperCase()\n    }\n\n    let bProp = b[property]\n    if (ignoreCase && isString(bProp)) {\n      bProp = bProp.toUpperCase()\n    }\n\n    if (aProp > bProp) {\n      return asc ? 1 : -1\n    }\n\n    if (aProp < bProp) {\n      return asc ? -1 : 1\n    }\n\n    return 0\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,gBAArB;AAEA,eAAe,SAASC,cAAT,CAAwBC,QAAxB,EAA0CC,GAAY,GAAG,IAAzD,EAA+DC,UAAmB,GAAG,IAArF,EAA2F;EACxG,OAAO,UAAUC,CAAV,EAAuCC,CAAvC,EAAoE;IACzE,IAAIC,KAAK,GAAGF,CAAC,CAACH,QAAD,CAAb;;IACA,IAAIE,UAAU,IAAIJ,QAAQ,CAACO,KAAD,CAA1B,EAAmC;MACjCA,KAAK,GAAGA,KAAK,CAACC,WAAN,EAAR;IACD;;IAED,IAAIC,KAAK,GAAGH,CAAC,CAACJ,QAAD,CAAb;;IACA,IAAIE,UAAU,IAAIJ,QAAQ,CAACS,KAAD,CAA1B,EAAmC;MACjCA,KAAK,GAAGA,KAAK,CAACD,WAAN,EAAR;IACD;;IAED,IAAID,KAAK,GAAGE,KAAZ,EAAmB;MACjB,OAAON,GAAG,GAAG,CAAH,GAAO,CAAC,CAAlB;IACD;;IAED,IAAII,KAAK,GAAGE,KAAZ,EAAmB;MACjB,OAAON,GAAG,GAAG,CAAC,CAAJ,GAAQ,CAAlB;IACD;;IAED,OAAO,CAAP;EACD,CApBD;AAqBD"}