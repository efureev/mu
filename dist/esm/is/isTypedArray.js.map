{"version":3,"file":"isTypedArray.js","names":["node","baseIsTypedArray","nodeIsTypedArray","isTypedArray","value"],"sources":["../../../src/is/isTypedArray.ts"],"sourcesContent":["import node from '../internal/node'\nimport baseIsTypedArray from '../internal/base/baseIsTypedArray'\n\nconst nodeIsTypedArray = node && node.isTypedArray\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * isTypedArray(new Uint8Array);\n * // => true\n *\n * isTypedArray([]);\n * // => false\n */\nexport default nodeIsTypedArray ? (value: any) => nodeIsTypedArray(value) : baseIsTypedArray\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,kBAAjB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AAEA,MAAMC,gBAAgB,GAAGF,IAAI,IAAIA,IAAI,CAACG,YAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeD,gBAAgB,GAAIE,KAAD,IAAgBF,gBAAgB,CAACE,KAAD,CAAnC,GAA6CH,gBAA5E"}