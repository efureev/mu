{"version":3,"file":"baseIsTypedArray.js","names":["isLength","isObjectLike","baseGetTag","argumentsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","typedArrayTags","baseIsTypedArray","value","length"],"sources":["../../../../src/internal/base/baseIsTypedArray.ts"],"sourcesContent":["/** `Object#toString` result references. */\nimport { isLength, isObjectLike } from '../../is'\nimport type { TagType } from './baseGetTag'\nimport baseGetTag from './baseGetTag'\n\nconst argumentsTag = '[object Arguments]',\n  arrayTag = '[object Array]',\n  boolTag = '[object Boolean]',\n  dateTag = '[object Date]',\n  errorTag = '[object Error]',\n  funcTag = '[object Function]',\n  mapTag = '[object Map]',\n  numberTag = '[object Number]',\n  objectTag = '[object Object]',\n  regexpTag = '[object RegExp]',\n  setTag = '[object Set]',\n  stringTag = '[object String]',\n  weakMapTag = '[object WeakMap]'\n\nconst arrayBufferTag = '[object ArrayBuffer]',\n  dataViewTag = '[object DataView]',\n  float32Tag = '[object Float32Array]',\n  float64Tag = '[object Float64Array]',\n  int8Tag = '[object Int8Array]',\n  int16Tag = '[object Int16Array]',\n  int32Tag = '[object Int32Array]',\n  uint8Tag = '[object Uint8Array]',\n  uint8ClampedTag = '[object Uint8ClampedArray]',\n  uint16Tag = '[object Uint16Array]',\n  uint32Tag = '[object Uint32Array]'\n\n/** Used to identify `toStringTag` values of typed arrays. */\nconst typedArrayTags = <Record<TagType | string, boolean>>{}\n\ntypedArrayTags[float32Tag] =\n  typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] =\n  typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] =\n  typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] =\n  typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] =\n    true\n\ntypedArrayTags[argumentsTag] =\n  typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] =\n  typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] =\n  typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] =\n  typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] =\n    false\n\n/**\n * The base implementation of `isTypedArray` without Node.js optimizations.\n *\n * @private\n */\nexport default function baseIsTypedArray(value: any): boolean {\n  return isObjectLike(value) && isLength(value.length) && typedArrayTags[baseGetTag(value)]\n}\n"],"mappings":"AAAA;AACA,SAASA,QAAT,EAAmBC,YAAnB,QAAuC,UAAvC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,YAAY,GAAG,oBAArB;AAAA,MACEC,QAAQ,GAAG,gBADb;AAAA,MAEEC,OAAO,GAAG,kBAFZ;AAAA,MAGEC,OAAO,GAAG,eAHZ;AAAA,MAIEC,QAAQ,GAAG,gBAJb;AAAA,MAKEC,OAAO,GAAG,mBALZ;AAAA,MAMEC,MAAM,GAAG,cANX;AAAA,MAOEC,SAAS,GAAG,iBAPd;AAAA,MAQEC,SAAS,GAAG,iBARd;AAAA,MASEC,SAAS,GAAG,iBATd;AAAA,MAUEC,MAAM,GAAG,cAVX;AAAA,MAWEC,SAAS,GAAG,iBAXd;AAAA,MAYEC,UAAU,GAAG,kBAZf;AAcA,MAAMC,cAAc,GAAG,sBAAvB;AAAA,MACEC,WAAW,GAAG,mBADhB;AAAA,MAEEC,UAAU,GAAG,uBAFf;AAAA,MAGEC,UAAU,GAAG,uBAHf;AAAA,MAIEC,OAAO,GAAG,oBAJZ;AAAA,MAKEC,QAAQ,GAAG,qBALb;AAAA,MAMEC,QAAQ,GAAG,qBANb;AAAA,MAOEC,QAAQ,GAAG,qBAPb;AAAA,MAQEC,eAAe,GAAG,4BARpB;AAAA,MASEC,SAAS,GAAG,sBATd;AAAA,MAUEC,SAAS,GAAG,sBAVd;AAYA;;AACA,MAAMC,cAAc,GAAsC,EAA1D;AAEAA,cAAc,CAACT,UAAD,CAAd,GACES,cAAc,CAACR,UAAD,CAAd,GACAQ,cAAc,CAACP,OAAD,CAAd,GACAO,cAAc,CAACN,QAAD,CAAd,GACAM,cAAc,CAACL,QAAD,CAAd,GACAK,cAAc,CAACJ,QAAD,CAAd,GACAI,cAAc,CAACH,eAAD,CAAd,GACAG,cAAc,CAACF,SAAD,CAAd,GACAE,cAAc,CAACD,SAAD,CAAd,GACE,IATJ;AAWAC,cAAc,CAACxB,YAAD,CAAd,GACEwB,cAAc,CAACvB,QAAD,CAAd,GACAuB,cAAc,CAACX,cAAD,CAAd,GACAW,cAAc,CAACtB,OAAD,CAAd,GACAsB,cAAc,CAACV,WAAD,CAAd,GACAU,cAAc,CAACrB,OAAD,CAAd,GACAqB,cAAc,CAACpB,QAAD,CAAd,GACAoB,cAAc,CAACnB,OAAD,CAAd,GACAmB,cAAc,CAAClB,MAAD,CAAd,GACAkB,cAAc,CAACjB,SAAD,CAAd,GACAiB,cAAc,CAAChB,SAAD,CAAd,GACAgB,cAAc,CAACf,SAAD,CAAd,GACAe,cAAc,CAACd,MAAD,CAAd,GACAc,cAAc,CAACb,SAAD,CAAd,GACAa,cAAc,CAACZ,UAAD,CAAd,GACE,KAfJ;AAiBA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASa,gBAAT,CAA0BC,KAA1B,EAA+C;EAC5D,OAAO5B,YAAY,CAAC4B,KAAD,CAAZ,IAAuB7B,QAAQ,CAAC6B,KAAK,CAACC,MAAP,CAA/B,IAAiDH,cAAc,CAACzB,UAAU,CAAC2B,KAAD,CAAX,CAAtE;AACD"}