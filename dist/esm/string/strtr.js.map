{"version":3,"file":"strtr.js","names":["pregQuote","replaceByTemplate","str","map","cmpString","offset","find","addString","index","length","fr","val","String","indexOf","Number","parseInt","slice","k","strtr","from","to","replace","RegExp","charAt"],"sources":["../../../src/string/strtr.ts"],"sourcesContent":["import pregQuote from '../utils/pregQuote'\nimport { TextNumber } from '../internal/types'\n\n/**\n * Replace all entries in string according to map\n *\n * @param {string} str\n * @param {{}} map\n * @return {string}\n */\nexport function replaceByTemplate(str: string, map: Record<string, TextNumber>): string {\n  let cmpString = '',\n    offset = 0,\n    find = -1,\n    addString = ''\n\n  for (let index = 0; index < str.length; index++) {\n    cmpString += '0'\n  }\n\n  for (const fr in map) {\n    offset = 0\n\n    const val = String(map[fr])\n    while ((find = str.indexOf(fr, offset)) !== -1) {\n      if (Number.parseInt(cmpString.slice(find, find + fr.length)) !== 0) {\n        offset = find + 1\n        continue\n      }\n\n      for (let k = 0; k < val.length; k++) {\n        addString += '1'\n      }\n\n      cmpString = cmpString.slice(0, find) + addString + cmpString.slice(find + fr.length, cmpString.length)\n\n      str = str.slice(0, find) + val + str.slice(find + fr.length, str.length)\n      offset = find + val.length //+ 1\n      addString = ''\n    }\n  }\n  return str\n}\n\nexport default function strtr(str: string, from: string | Record<string, TextNumber>, to?: string) {\n  if (typeof from === 'object') {\n    return replaceByTemplate(str, from)\n  }\n  if (!to) {\n    return str\n  }\n  for (let index = 0; index < from.length; index++) {\n    str = str.replace(new RegExp(pregQuote(from.charAt(index)), 'g'), to.charAt(index))\n  }\n\n  return str\n}\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,oBAAtB;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAT,CAA2BC,GAA3B,EAAwCC,GAAxC,EAAiF;EACtF,IAAIC,SAAS,GAAG,EAAhB;EAAA,IACEC,MAAM,GAAG,CADX;EAAA,IAEEC,IAAI,GAAG,CAAC,CAFV;EAAA,IAGEC,SAAS,GAAG,EAHd;;EAKA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGN,GAAG,CAACO,MAAhC,EAAwCD,KAAK,EAA7C,EAAiD;IAC/CJ,SAAS,IAAI,GAAb;EACD;;EAED,KAAK,MAAMM,EAAX,IAAiBP,GAAjB,EAAsB;IACpBE,MAAM,GAAG,CAAT;IAEA,MAAMM,GAAG,GAAGC,MAAM,CAACT,GAAG,CAACO,EAAD,CAAJ,CAAlB;;IACA,OAAO,CAACJ,IAAI,GAAGJ,GAAG,CAACW,OAAJ,CAAYH,EAAZ,EAAgBL,MAAhB,CAAR,MAAqC,CAAC,CAA7C,EAAgD;MAC9C,IAAIS,MAAM,CAACC,QAAP,CAAgBX,SAAS,CAACY,KAAV,CAAgBV,IAAhB,EAAsBA,IAAI,GAAGI,EAAE,CAACD,MAAhC,CAAhB,MAA6D,CAAjE,EAAoE;QAClEJ,MAAM,GAAGC,IAAI,GAAG,CAAhB;QACA;MACD;;MAED,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAAG,CAACF,MAAxB,EAAgCQ,CAAC,EAAjC,EAAqC;QACnCV,SAAS,IAAI,GAAb;MACD;;MAEDH,SAAS,GAAGA,SAAS,CAACY,KAAV,CAAgB,CAAhB,EAAmBV,IAAnB,IAA2BC,SAA3B,GAAuCH,SAAS,CAACY,KAAV,CAAgBV,IAAI,GAAGI,EAAE,CAACD,MAA1B,EAAkCL,SAAS,CAACK,MAA5C,CAAnD;MAEAP,GAAG,GAAGA,GAAG,CAACc,KAAJ,CAAU,CAAV,EAAaV,IAAb,IAAqBK,GAArB,GAA2BT,GAAG,CAACc,KAAJ,CAAUV,IAAI,GAAGI,EAAE,CAACD,MAApB,EAA4BP,GAAG,CAACO,MAAhC,CAAjC;MACAJ,MAAM,GAAGC,IAAI,GAAGK,GAAG,CAACF,MAApB,CAb8C,CAanB;;MAC3BF,SAAS,GAAG,EAAZ;IACD;EACF;;EACD,OAAOL,GAAP;AACD;AAED,eAAe,SAASgB,KAAT,CAAehB,GAAf,EAA4BiB,IAA5B,EAAuEC,EAAvE,EAAoF;EACjG,IAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;IAC5B,OAAOlB,iBAAiB,CAACC,GAAD,EAAMiB,IAAN,CAAxB;EACD;;EACD,IAAI,CAACC,EAAL,EAAS;IACP,OAAOlB,GAAP;EACD;;EACD,KAAK,IAAIM,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGW,IAAI,CAACV,MAAjC,EAAyCD,KAAK,EAA9C,EAAkD;IAChDN,GAAG,GAAGA,GAAG,CAACmB,OAAJ,CAAY,IAAIC,MAAJ,CAAWtB,SAAS,CAACmB,IAAI,CAACI,MAAL,CAAYf,KAAZ,CAAD,CAApB,EAA0C,GAA1C,CAAZ,EAA4DY,EAAE,CAACG,MAAH,CAAUf,KAAV,CAA5D,CAAN;EACD;;EAED,OAAON,GAAP;AACD"}