{"version":3,"file":"stringToArray.js","names":["hasUnicode","reUnicode","unicodeToArray","value","match","asciiToArray","split","stringToArray"],"sources":["../../../src/string/stringToArray.ts"],"sourcesContent":["import { hasUnicode, reUnicode } from './unicode'\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} value The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(value: string): string[] {\n  return value.match(reUnicode) || []\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} value The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(value: string): string[] {\n  return value.split('')\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} value The string to convert.\n * @returns {Array} Returns the converted array.\n */\nexport default function stringToArray(value: string): string[] {\n  return hasUnicode(value) ? unicodeToArray(value) : asciiToArray(value)\n}\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,WAAtC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAAiD;EAC/C,OAAOA,KAAK,CAACC,KAAN,CAAYH,SAAZ,KAA0B,EAAjC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,YAAT,CAAsBF,KAAtB,EAA+C;EAC7C,OAAOA,KAAK,CAACG,KAAN,CAAY,EAAZ,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,aAAT,CAAuBJ,KAAvB,EAAgD;EAC7D,OAAOH,UAAU,CAACG,KAAD,CAAV,GAAoBD,cAAc,CAACC,KAAD,CAAlC,GAA4CE,YAAY,CAACF,KAAD,CAA/D;AACD"}