{"version":3,"file":"merge.js","names":["clone","isObject","merge","original","values","ln","length","i","object","key","value","sourceKey","constructor","Object"],"sources":["../../../src/object/merge.ts"],"sourcesContent":["import clone from '../core/clone'\nimport isObject from '../is/isObject'\n\n/**\n * Merge objects recursively\n *\n *     var js = {\n *         companyName: 'JS',\n *         products: ['JS', 'GWT', 'Designer'],\n *         isSuperCool: true,\n *         office: {\n *             size: 2000,\n *             location: 'Palo Alto',\n *             isFun: true\n *         }\n *     };\n *\n *     var newStuff = {\n *         companyName: 'Jacksonville',\n *         products: ['JS', 'GWT', 'Designer', 'Touch', 'Animator'],\n *         office: {\n *             size: 40000,\n *             location: 'Redwood City'\n *         }\n *     };\n *\n *     const result = merge(js, newStuff);\n *\n *     {\n *         companyName: 'Jacksonville',\n *         products: ['JS', 'GWT', 'Designer', 'Touch', 'Animator'],\n *         isSuperCool: true,\n *         office: {\n *             size: 40000,\n *             location: 'Redwood City',\n *             isFun: true\n *         }\n *     }\n */\ntype record = Record<PropertyKey, any>\n\nexport default function merge<T extends Partial<record>>(original: Partial<T>, ...values: Partial<T>[]): T {\n  const ln = values.length\n  let i = 0,\n    object: Partial<T>,\n    key: PropertyKey,\n    value: any,\n    sourceKey: any\n\n  for (; i < ln; i++) {\n    object = values[i]\n    if (!isObject(object)) {\n      continue\n    }\n    for (key in object) {\n      value = object[key]\n      if (value && value.constructor === Object) {\n        sourceKey = original[key]\n        if (sourceKey && sourceKey.constructor === Object) {\n          merge<T>(sourceKey, value)\n        } else {\n          ;(<T>original[key]) = clone<T>(value)\n        }\n      } else {\n        ;(<T>original[key]) = value\n      }\n    }\n  }\n\n  return <T>original\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,eAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAe,SAASC,KAAT,CAA0CC,QAA1C,EAAgE,GAAGC,MAAnE,EAA4F;EACzG,MAAMC,EAAE,GAAGD,MAAM,CAACE,MAAlB;EACA,IAAIC,CAAC,GAAG,CAAR;EAAA,IACEC,MADF;EAAA,IAEEC,GAFF;EAAA,IAGEC,KAHF;EAAA,IAIEC,SAJF;;EAMA,OAAOJ,CAAC,GAAGF,EAAX,EAAeE,CAAC,EAAhB,EAAoB;IAClBC,MAAM,GAAGJ,MAAM,CAACG,CAAD,CAAf;;IACA,IAAI,CAACN,QAAQ,CAACO,MAAD,CAAb,EAAuB;MACrB;IACD;;IACD,KAAKC,GAAL,IAAYD,MAAZ,EAAoB;MAClBE,KAAK,GAAGF,MAAM,CAACC,GAAD,CAAd;;MACA,IAAIC,KAAK,IAAIA,KAAK,CAACE,WAAN,KAAsBC,MAAnC,EAA2C;QACzCF,SAAS,GAAGR,QAAQ,CAACM,GAAD,CAApB;;QACA,IAAIE,SAAS,IAAIA,SAAS,CAACC,WAAV,KAA0BC,MAA3C,EAAmD;UACjDX,KAAK,CAAIS,SAAJ,EAAeD,KAAf,CAAL;QACD,CAFD,MAEO;UACL;UAAKP,QAAQ,CAACM,GAAD,CAAZ,GAAqBT,KAAK,CAAIU,KAAJ,CAA1B;QACF;MACF,CAPD,MAOO;QACL;QAAKP,QAAQ,CAACM,GAAD,CAAZ,GAAqBC,KAArB;MACF;IACF;EACF;;EAED,OAAUP,QAAV;AACD"}