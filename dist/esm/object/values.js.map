{"version":3,"file":"values.js","names":["keys","baseValues","object","properties","map","key","values"],"sources":["../../../src/object/values.ts"],"sourcesContent":["import keys from '../core/keys'\n\n/**\n * The base implementation of `values`\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} properties The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object: Record<string, any>, properties: string[]) {\n  return properties.map((key: string) => object[key])\n}\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * values('hi');\n * // => ['h', 'i']\n */\nexport default function values(object?: any): any[] {\n  return object == null ? [] : baseValues(object, keys(object))\n}\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,cAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAoBC,MAApB,EAAiDC,UAAjD,EAAuE;EACrE,OAAOA,UAAU,CAACC,GAAX,CAAgBC,GAAD,IAAiBH,MAAM,CAACG,GAAD,CAAtC,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,MAAT,CAAgBJ,MAAhB,EAAqC;EAClD,OAAOA,MAAM,IAAI,IAAV,GAAiB,EAAjB,GAAsBD,UAAU,CAACC,MAAD,EAASF,IAAI,CAACE,MAAD,CAAb,CAAvC;AACD"}