{"version":3,"file":"times.js","names":["isFunction","times","n","iteratee","result","Array","index","isFn","iterValue"],"sources":["../../../src/utils/times.ts"],"sourcesContent":["import { isFunction } from '../is'\nimport { TextNumber } from '../internal/types'\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * times(3); // => ['0', '1', '2']\n */\ntype F = (idx: number) => TextNumber\n\nexport default function times(n: number = 1, iteratee?: TextNumber | F): TextNumber[] {\n  const result = new Array(n)\n  let index = -1\n\n  const isFn = isFunction(iteratee)\n\n  while (++index < n) {\n    const iterValue = isFn ? (iteratee as F)(index) : null\n\n    result[index] = iterValue || iteratee || index\n  }\n\n  return result\n}\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AAgBA,eAAe,SAASC,KAAT,CAAeC,CAAS,GAAG,CAA3B,EAA8BC,QAA9B,EAAuE;EACpF,MAAMC,MAAM,GAAG,IAAIC,KAAJ,CAAUH,CAAV,CAAf;EACA,IAAII,KAAK,GAAG,CAAC,CAAb;EAEA,MAAMC,IAAI,GAAGP,UAAU,CAACG,QAAD,CAAvB;;EAEA,OAAO,EAAEG,KAAF,GAAUJ,CAAjB,EAAoB;IAClB,MAAMM,SAAS,GAAGD,IAAI,GAAIJ,QAAD,CAAgBG,KAAhB,CAAH,GAA4B,IAAlD;IAEAF,MAAM,CAACE,KAAD,CAAN,GAAgBE,SAAS,IAAIL,QAAb,IAAyBG,KAAzC;EACD;;EAED,OAAOF,MAAP;AACD"}