{"version":3,"file":"Stack.js","names":["isFunction","Stack","data","push","item","pull","isEmpty","pop","undefined","peek","size","length","toArray","reverse","toString","callback","map"],"sources":["../../../src/structures/Stack.ts"],"sourcesContent":["import isFunction from '../is/isFunction'\n\nexport class Stack<T> {\n  protected data: T[] = []\n\n  public push(item: T): void {\n    this.data.push(item)\n  }\n\n  public pull(): T | undefined {\n    return !this.isEmpty() ? this.data.pop() : undefined\n  }\n\n  public peek(): T | undefined {\n    return !this.isEmpty() ? this.data[this.size() - 1] : undefined\n  }\n\n  public size(): number {\n    return this.data.length\n  }\n\n  public isEmpty(): boolean {\n    return this.data.length === 0\n  }\n\n  public toArray(): T[] {\n    return [...this.data].reverse()\n  }\n\n  public toString(callback?: (i: T) => any): string {\n    const data = this.toArray()\n\n    if (callback && isFunction(callback)) {\n      return data.map(item => callback(item)).toString()\n    }\n\n    return data.toString()\n  }\n}\n\nexport default new Stack()\n"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AAEA,OAAO,MAAMC,KAAN,CAAe;EACVC,IAAI,GAAQ,EAAR;;EAEPC,IAAI,CAACC,IAAD,EAAgB;IACzB,KAAKF,IAAL,CAAUC,IAAV,CAAeC,IAAf;EACD;;EAEMC,IAAI,GAAkB;IAC3B,OAAO,CAAC,KAAKC,OAAL,EAAD,GAAkB,KAAKJ,IAAL,CAAUK,GAAV,EAAlB,GAAoCC,SAA3C;EACD;;EAEMC,IAAI,GAAkB;IAC3B,OAAO,CAAC,KAAKH,OAAL,EAAD,GAAkB,KAAKJ,IAAL,CAAU,KAAKQ,IAAL,KAAc,CAAxB,CAAlB,GAA+CF,SAAtD;EACD;;EAEME,IAAI,GAAW;IACpB,OAAO,KAAKR,IAAL,CAAUS,MAAjB;EACD;;EAEML,OAAO,GAAY;IACxB,OAAO,KAAKJ,IAAL,CAAUS,MAAV,KAAqB,CAA5B;EACD;;EAEMC,OAAO,GAAQ;IACpB,OAAO,CAAC,GAAG,KAAKV,IAAT,EAAeW,OAAf,EAAP;EACD;;EAEMC,QAAQ,CAACC,QAAD,EAAmC;IAChD,MAAMb,IAAI,GAAG,KAAKU,OAAL,EAAb;;IAEA,IAAIG,QAAQ,IAAIf,UAAU,CAACe,QAAD,CAA1B,EAAsC;MACpC,OAAOb,IAAI,CAACc,GAAL,CAASZ,IAAI,IAAIW,QAAQ,CAACX,IAAD,CAAzB,EAAiCU,QAAjC,EAAP;IACD;;IAED,OAAOZ,IAAI,CAACY,QAAL,EAAP;EACD;;AAnCmB;AAsCtB,eAAe,IAAIb,KAAJ,EAAf"}