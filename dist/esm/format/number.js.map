{"version":3,"file":"number.js","names":["isInteger","number","value","decimals","decPoint","thousandsSeparator","clearDecimals","isNaN","Math","abs","sign","intPart","parseInt","toFixed","j","length","slice","replace","numberRus"],"sources":["../../../src/format/number.ts"],"sourcesContent":["import isInteger from '../is/isInteger'\nimport { TextNumber } from '../internal/types'\n\n/**\n * Formatting number\n * @param {String|Number} value\n * @param {Number} decimals\n * @param {String} decPoint\n * @param {String} thousandsSeparator\n * @param {Boolean} clearDecimals\n * @returns {string}\n */\nexport default function number(\n  value: TextNumber,\n  decimals: number = 2,\n  decPoint: string = '.',\n  thousandsSeparator: string = ',',\n  clearDecimals: boolean = false\n): string {\n  decimals = isNaN(decimals) ? 2 : Math.abs(decimals)\n\n  const sign = value < 0 ? '-' : ''\n  value = Math.abs(+value || 0)\n\n  const intPart = parseInt(value.toFixed(decimals), 10) + ''\n  // const intPartStr = intPart + ''\n  const j = intPart.length > 3 ? intPart.length % 3 : 0\n\n  return (\n    sign +\n    (j ? intPart.slice(0, j) + thousandsSeparator : '') +\n    intPart.slice(j).replace(/(\\d{3})(?=\\d)/g, '$1' + thousandsSeparator) +\n    (decimals\n      ? clearDecimals && isInteger(value)\n        ? ''\n        : decPoint +\n          Math.abs(value - +intPart)\n            .toFixed(decimals)\n            .slice(2)\n      : '')\n  )\n}\n\nexport function numberRus(value: TextNumber, decimals: number = 2): string {\n  return number(value, decimals, '.', ' ', true)\n}\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,MAAT,CACbC,KADa,EAEbC,QAAgB,GAAG,CAFN,EAGbC,QAAgB,GAAG,GAHN,EAIbC,kBAA0B,GAAG,GAJhB,EAKbC,aAAsB,GAAG,KALZ,EAML;EACRH,QAAQ,GAAGI,KAAK,CAACJ,QAAD,CAAL,GAAkB,CAAlB,GAAsBK,IAAI,CAACC,GAAL,CAASN,QAAT,CAAjC;EAEA,MAAMO,IAAI,GAAGR,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkB,EAA/B;EACAA,KAAK,GAAGM,IAAI,CAACC,GAAL,CAAS,CAACP,KAAD,IAAU,CAAnB,CAAR;EAEA,MAAMS,OAAO,GAAGC,QAAQ,CAACV,KAAK,CAACW,OAAN,CAAcV,QAAd,CAAD,EAA0B,EAA1B,CAAR,GAAwC,EAAxD,CANQ,CAOR;;EACA,MAAMW,CAAC,GAAGH,OAAO,CAACI,MAAR,GAAiB,CAAjB,GAAqBJ,OAAO,CAACI,MAAR,GAAiB,CAAtC,GAA0C,CAApD;EAEA,OACEL,IAAI,IACHI,CAAC,GAAGH,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiBF,CAAjB,IAAsBT,kBAAzB,GAA8C,EAD5C,CAAJ,GAEAM,OAAO,CAACK,KAAR,CAAcF,CAAd,EAAiBG,OAAjB,CAAyB,gBAAzB,EAA2C,OAAOZ,kBAAlD,CAFA,IAGCF,QAAQ,GACLG,aAAa,IAAIN,SAAS,CAACE,KAAD,CAA1B,GACE,EADF,GAEEE,QAAQ,GACRI,IAAI,CAACC,GAAL,CAASP,KAAK,GAAG,CAACS,OAAlB,EACGE,OADH,CACWV,QADX,EAEGa,KAFH,CAES,CAFT,CAJG,GAOL,EAVJ,CADF;AAaD;AAED,OAAO,SAASE,SAAT,CAAmBhB,KAAnB,EAAsCC,QAAgB,GAAG,CAAzD,EAAoE;EACzE,OAAOF,MAAM,CAACC,KAAD,EAAQC,QAAR,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,IAA5B,CAAb;AACD"}